{"version":3,"sources":["index.js"],"names":["refs","daysEl","document","querySelector","hoursEl","minutesEl","secondsEl","CountdownTimer","selector","targetDate","newTimer","setInterval","startTime","currentTime","Date","now","timer","updateValues","time","updateClockFace","pad","Math","floor","value","String","padStart","days","hours","mins","secs","textContent","start"],"mappings":";;;AAmDG,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAnDH,QAAA,eAEA,IAAMA,EAAO,CACTC,OAAQC,SAASC,cAAc,2BAC/BC,QAASF,SAASC,cAAc,4BAChCE,UAAWH,SAASC,cAAc,2BAClCG,UAAWJ,SAASC,cAAc,4BAI9BI,EAAAA,WACQC,SAAAA,EAAAA,EAAUC,GAAY,EAAA,KAAA,GAC3BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAsCrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAnCC,MAAA,SAAMC,GAAU,IAAA,EAAA,KAGCC,YAAY,WACnBC,IAAAA,EAAY,EAAKH,WACjBI,EAAcC,KAAKC,MAEzBL,EADaE,EAAYC,IAExB,SA2BN,EAzCKN,GAkBAK,EAAY,IAAIE,KAAK,eACrBE,EAAQ,IAAIT,EAAe,UAAWK,GAI5C,SAASK,EAAaC,GAMpBC,EALaC,EAAIC,KAAKC,MAAMJ,EAAQ,QACtBE,EAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAClDE,EAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MAC5CE,EAAIC,KAAKC,MAAOJ,EAAQ,IAAc,OAKrD,SAASE,EAAIG,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnC,SAASN,EAAgBO,EAAMC,EAAOC,EAAMC,GAC1C7B,EAAKC,OAAO6B,YAAcJ,EAC1B1B,EAAKI,QAAQ0B,YAAcH,EAC3B3B,EAAKK,UAAUyB,YAAcF,EAC7B5B,EAAKM,UAAUwB,YAAcD,EAnB/Bb,EAAMe,MAAMd","file":"src.545bc72e.js","sourceRoot":"../src","sourcesContent":["import './style.css';\n\nconst refs = {\n    daysEl: document.querySelector('span[data-value = days]'),\n    hoursEl: document.querySelector('span[data-value = hours]'),\n    minutesEl: document.querySelector('span[data-value = mins]'),\n    secondsEl: document.querySelector('span[data-value = secs]'),\n  };\n  \n\n  class CountdownTimer {\n    constructor(selector, targetDate) {\n      this.selector = selector;\n      this.targetDate = targetDate;\n    }\n    \n    start(newTimer) {\n        let intervalId = null;\n        \n        intervalId = setInterval(() => {\n        const startTime = this.targetDate;\n        const currentTime = Date.now();\n        const time = startTime - currentTime;\n        newTimer(time);\n      }, 1000);\n    }\n  }\n\n  const startTime = new Date('Jul 3, 2021');\n  const timer = new CountdownTimer('#timer1', startTime);\n  \n  timer.start(updateValues);\n  \n  function updateValues(time) {\n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  \n    updateClockFace(days, hours, mins, secs);\n  }\n\n  function pad(value) {\n    return String(value).padStart(2, '0');\n  }\n  \n  function updateClockFace(days, hours, mins, secs) {\n    refs.daysEl.textContent = days;\n    refs.hoursEl.textContent = hours;\n    refs.minutesEl.textContent = mins;\n    refs.secondsEl.textContent = secs;\n  } \n"]}